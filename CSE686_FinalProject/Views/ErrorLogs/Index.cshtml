@model PagedList.IPagedList<ErrorLoggerModel.ErrorLog>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*@model ICollection<ErrorLoggerModel.ErrorLog>*@

@{
    ViewBag.Title = "Error Logs Home";
}

<h2>View Error Logs for your Applications</h2>

<div class="container">
    <h3>Your Available Applications:</h3>
    <ul>
        @foreach (ErrorLoggerModel.Application app in ViewBag.Apps)
        {
            <li>@Html.DisplayFor(a => app.appName)</li>
        }
    </ul>
    <h3>Number of log files: @ViewBag.TotalCount</h3>

    @using (Html.BeginForm())
    {
        <p>
            Search/Filter by Source Application: @Html.TextBox("AppString")
            <input type="submit" value="Search" />
            <input type="submit" value="Reset" />
        </p>
    }

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink(@Html.DisplayNameFor(m => Model.FirstOrDefault().logID).ToString(), "Index", new { sortOrder = ViewBag.LogIDSortParam, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink(@Html.DisplayNameFor(m => Model.FirstOrDefault().fileName).ToString(), "Index", new { sortOrder = ViewBag.LogNameSortParam, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink(@Html.DisplayNameFor(m => Model.FirstOrDefault().logType).ToString(), "Index", new { sortOrder = ViewBag.LogTypeSortParam, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink(@Html.DisplayNameFor(m => Model.FirstOrDefault().timeStamp).ToString(), "Index", new { sortOrder = ViewBag.LogTimeSortParam, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink(@Html.DisplayNameFor(m => Model.FirstOrDefault().Application).ToString(), "Index", new { sortOrder = ViewBag.LogAppSortParam, currentFilter = ViewBag.CurrentFilter })
            </th>
        </tr>
    </thead>
    
    <tbody>
        @foreach (ErrorLoggerModel.ErrorLog logFile in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(m => logFile.logID)
                </td>
                <td>
                    @Html.DisplayFor(m => logFile.fileName)
                </td>
                <td>
                    @Html.DisplayFor(m => logFile.logType.typeName)
                </td>
                <td>
                    @Html.DisplayFor(m => logFile.timeStamp)
                </td>
                <td>
                    @Html.DisplayFor(m => logFile.Application.appName)
                </td>
            </tr>
        }
    </tbody>
</table>
</div>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))


